buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
    }
}


apply plugin: 'java-library'
apply plugin: "com.github.johnrengelman.shadow"


sourceSets.main.resources.srcDir 'src/main/resources'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api 'org.smali:smali:2.3.4'
    api 'org.smali:baksmali:2.3.4'
    api 'commons-io:commons-io:2.6'
    api 'org.apache.commons:commons-lang3:3.7'
    api 'commons-cli:commons-cli:1.4'

    api 'net.dongliu:apk-parser:2.6.10'
    // https://mvnrepository.com/artifact/org.apache.ant/ant
    // 我们从ant中抽取了zip模块代码
    //compile group: 'org.apache.ant', name: 'ant', version: '1.10.5'

    implementation project(':buildSrc')
}

sourceCompatibility = "8"
targetCompatibility = "8"

jar.enabled = false
shadowJar {
    baseName = 'ZeldaBuilder'
    classifier = null
    version = rootProject.ext.zeldaEngineVersion
    manifest {
        attributes 'Main-Class': 'com.virjar.zelda.apkbuilder.ZeldaBuilder'
    }
}
assemble.dependsOn(shadowJar)

import com.virjar.zelda.buildsrc.Constants

import java.lang.reflect.Field
import java.lang.reflect.Modifier;

task storeBuildConstantsProperties() {

    Properties engineProperties = new Properties()
    engineProperties.setProperty("zelda_engine_versionCode", String.valueOf(rootProject.ext.zeldaEngineVersionCode))
    engineProperties.setProperty("zelda_engine_versionName", String.valueOf(rootProject.ext.zeldaEngineVersion))

    for (Field field : Constants.class.declaredFields) {
        if (!Modifier.isStatic(field.getModifiers())) {
            continue
        }
        if (field.isSynthetic()) {
            continue
        }
        Object value = field.get(null);
        engineProperties.setProperty(Constants.ZELDA_CONSTANTS_PREFIX + field.getName(), String.valueOf(value));
    }

    FileOutputStream fileOutputStream = new FileOutputStream(new File(rootProject.rootDir, "zelda-builder/src/main/resources/zelda_config.properties"))
    engineProperties.store(fileOutputStream, "auto generated by zelda engine builder")
    fileOutputStream.close()

}
processResources.dependsOn(storeBuildConstantsProperties);